/*
	S_interactingNeighborCount_1D.slim
	
	This exercises building distance sparse vectors.  This is the 1D case.
	The maxDistance is set to produce about 27 million interactions, and
	then the number of replicates is scaled to take about ten seconds.
*/

initialize() {
	initializeSLiMOptions(dimensionality="x");
	initializeInteractionType(1, "x", reciprocal=T, maxDistance=0.15);
	i1.setInteractionFunction("f", 1.0);
}
1 late() {
	sim.addSubpop("p1", 10000);
	
	inds = p1.individuals;
	inds.setSpatialPosition(p1.pointUniform(p1.individualCount));
	
	i1.evaluate(p1);
	
	start = clock("mono");
	x = sapply(1:100, "sum(i1.interactingNeighborCount(inds));");
	catn("TEST TIME: " + (clock("mono") - start));
	
	// summarize results
	first_x = x[0];
	all_equal = all(x == first_x);
	if (all_equal)
		catn("### ALL " + first_x + " (" + length(x) + ") ###");
	else
		catn("### *** INCONSISTENT *** " + mean(x) + " (" + length(x) + ") *** ###");
}
