{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww37600\viewh12480\viewkind0
\pard\tx3281\tx5263\tx5482\tx6480\tx7200\tx7920\tx8640\li9350\fi-9351\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Weight	Self Weight		Symbol Name\
23.80 s  100.0%	0 s	 	slim (4626)\
23.80 s  100.0%	0 s	 	 Main Thread  0x58df7c\
23.80 s   99.9%	0 s	 	  start\
23.80 s   99.9%	0 s	 	   main\
23.80 s   99.9%	0 s	 	    SLiMSim::_RunOneGenerationWF()\
20.72 s   87.0%	504.00 ms	 	     Population::EvolveSubpopulation(Subpopulation&, bool, bool, bool, bool)\
18.79 s   78.9%	3.18 s	 	      Population::DoCrossoverMutation(Subpopulation*, Genome&, int, IndividualSex, IndividualSex, std::__1::vector<SLiMEidosBlock*, std::__1::allocator<SLiMEidosBlock*> >*, std::__1::vector<SLiMEidosBlock*, std::__1::allocator<SLiMEidosBlock*> >*)\
14.18 s   59.5%	11.35 s	 	       Genome::copy_from_genome(Genome const&)\
2.76 s   11.5%	0 s	 	        Eidos_intrusive_ptr<MutationRun>::operator=(Eidos_intrusive_ptr<MutationRun> const&)\
2.20 s    9.2%	0 s	 	         Eidos_intrusive_ptr<MutationRun>::Eidos_intrusive_ptr(Eidos_intrusive_ptr<MutationRun> const&)\
2.20 s    9.2%	2.14 s	 	          Eidos_intrusive_ptr<MutationRun>::Eidos_intrusive_ptr(Eidos_intrusive_ptr<MutationRun> const&)\
545.00 ms    2.2%	545.00 ms	 	         Eidos_intrusive_ptr<MutationRun>::swap(Eidos_intrusive_ptr<MutationRun>&)\
868.00 ms    3.6%	234.00 ms	 	       Chromosome::DrawMutationAndBreakpointCounts(IndividualSex, int*, int*) const\
634.00 ms    2.6%	80.00 ms	 	        Eidos_rng_uniform(gsl_rng*)\
554.00 ms    2.3%	554.00 ms	 	         taus_get_inline(void*)\
260.00 ms    1.0%	242.00 ms	 	       Eidos_RandomBool()\
1.33 s    5.5%	93.00 ms	 	      Subpopulation::DrawParentUsingFitness() const\
1.23 s    5.1%	519.00 ms	 	       Eidos_rng_uniform_int(gsl_rng*, unsigned int)\
714.00 ms    2.9%	714.00 ms	 	        taus_get_inline(void*)\
1.49 s    6.2%	0 s	 	     Population::MaintainRegistry()\
1.49 s    6.2%	0 s	 	      Population::TallyMutationReferences(std::__1::vector<Subpopulation*, std::__1::allocator<Subpopulation*> >*, bool)\
1.49 s    6.2%	135.00 ms	 	       Population::TallyMutationReferences_FAST()\
1.36 s    5.6%	1.35 s	 	        Genome::TallyGenomeMutationReferences(long long)\
1.45 s    6.1%	149.00 ms	 	     Population::ClearParentalGenomes()\
1.30 s    5.4%	651.00 ms	 	      Genome::clear_to_nullptr()\
654.00 ms    2.7%	0 s	 	       Eidos_intrusive_ptr<MutationRun>::reset()\
367.00 ms    1.5%	367.00 ms	 	        Eidos_intrusive_ptr<MutationRun>::swap(Eidos_intrusive_ptr<MutationRun>&)\
287.00 ms    1.2%	0 s	 	        Eidos_intrusive_ptr<MutationRun>::~Eidos_intrusive_ptr()\
287.00 ms    1.2%	20.00 ms	 	         Eidos_intrusive_ptr<MutationRun>::~Eidos_intrusive_ptr()\
267.00 ms    1.1%	267.00 ms	 	          Eidos_intrusive_ptr_release(MutationRun const*)\
}